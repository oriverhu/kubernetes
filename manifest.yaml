apiVersion: v1
kind: ConfigMap
metadata:
  name: config-container
  labels:
    app: grupo2
data:
  db_host: dev.host.local
  db_user: dev_user
---  
apiVersion: v1
kind: Secret
metadata:
  name: secret-container
  labels:
    app: grupo2  
type: Opaque
stringData:
  username: admin
  password: "12345678"
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    type: service
  labels:
    app: grupo2
  name: grupo2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grupo2
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0             
  template:
    metadata:
      annotations:
        type: service
      labels:
        app: grupo2
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20        
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
        env:
        - name: VAR1
          value: "valor de prueba 1"  
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: config-container
              key: db_host
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: config-container
              key: db_user   
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-container
              key: password
        volumeMounts:
        - name: test
          mountPath: "/opt"
          readOnly: true
        - mountPath: /var/log/nginx
          name: vol          
      volumes:
      - name: test
        secret:
          secretName: secret-container
          items:
          - key: username
            path: user.txt    
      - name: vol
        emptyDir: {}                                                  
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    type: service
  labels:
    app: grupo2
  name: grupo2-hpa
spec:
  maxReplicas: 4
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grupo2
  targetCPUUtilizationPercentage: 50
---  
apiVersion: v1
kind: Service
metadata:
  annotations:
    type: service
  labels:
    app: grupo2
  name: grupo2-service
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80
  selector:
    app: grupo2
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    type: service
  labels:
    app: grupo2
  name: grupo2-ingress
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: grupo2-service
            port:
              number: 80
        path: /test
        pathType: Prefix        
